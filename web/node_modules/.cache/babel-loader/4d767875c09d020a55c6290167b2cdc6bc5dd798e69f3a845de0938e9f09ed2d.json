{"ast":null,"code":"var _jsxFileName = \"C:\\\\demo-project\\\\web\\\\src\\\\Components\\\\UpdatePatient.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Box, Typography, Snackbar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePatient = () => {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [message, setMessage] = useState('');\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:3001/update-patient/${phoneNumber}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        setMessage('Patient found, ready for update!');\n        setOpenSnackbar(true);\n      } else {\n        setMessage('New number, cannot update');\n        setOpenSnackbar(true);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessage('Error connecting to server');\n      setOpenSnackbar(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4,\n      maxWidth: 400,\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Update Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Phone Number\",\n      value: phoneNumber,\n      onChange: e => setPhoneNumber(e.target.value),\n      sx: {\n        mb: 3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSubmit,\n      children: \"Check & Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 4000,\n      onClose: () => setOpenSnackbar(false),\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdatePatient, \"yiJIPrF1P00sZghg130WW0GBM3U=\");\n_c = UpdatePatient;\nexport default UpdatePatient;\nvar _c;\n$RefreshReg$(_c, \"UpdatePatient\");","map":{"version":3,"names":["React","useState","TextField","Button","Box","Typography","Snackbar","jsxDEV","_jsxDEV","UpdatePatient","_s","phoneNumber","setPhoneNumber","message","setMessage","openSnackbar","setOpenSnackbar","handleSubmit","e","preventDefault","response","fetch","method","headers","data","json","status","error","console","sx","p","maxWidth","margin","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","label","value","onChange","target","mb","color","onClick","open","autoHideDuration","onClose","_c","$RefreshReg$"],"sources":["C:/demo-project/web/src/Components/UpdatePatient.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Box, Typography, Snackbar } from '@mui/material';\r\n\r\nconst UpdatePatient = () => {\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/update-patient/${phoneNumber}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      const data = await response.json();\r\n\r\n      if (response.status === 200) {\r\n  \r\n        setMessage('Patient found, ready for update!');\r\n        setOpenSnackbar(true);\r\n        \r\n      } else {\r\n   \r\n        setMessage('New number, cannot update');\r\n        setOpenSnackbar(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setMessage('Error connecting to server');\r\n      setOpenSnackbar(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 4, maxWidth: 400, margin: '0 auto' }}>\r\n      <Typography variant=\"h4\" gutterBottom>Update Patient</Typography>\r\n      <TextField\r\n        fullWidth\r\n        label=\"Phone Number\"\r\n        value={phoneNumber}\r\n        onChange={(e) => setPhoneNumber(e.target.value)}\r\n        sx={{ mb: 3 }}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n        Check & Update\r\n      </Button>\r\n\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        autoHideDuration={4000}\r\n        onClose={() => setOpenSnackbar(false)}\r\n        message={message}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UpdatePatient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}